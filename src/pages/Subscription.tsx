import { useState } from 'react';
import { useAuth } from '@/hooks/useAuth';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { toast } from '@/hooks/use-toast';
import { ArrowLeft, Check, Star } from 'lucide-react';
import { useNavigate } from 'react-router-dom';

const Subscription = () => {
  const { userData, logout } = useAuth();
  const navigate = useNavigate();
  const [loading, setLoading] = useState<string | null>(null);

  const plans = [
    {
      id: 'free',
      name: 'Free',
      price: '‡ß≥‡ß¶',
      period: '‡¶ö‡¶ø‡¶∞‡¶ï‡¶æ‡¶≤',
      tokens: '‡ß´ ‡¶ü‡ßã‡¶ï‡ßá‡¶®',
      features: [
        '‡¶¨‡ßá‡¶∏‡¶ø‡¶ï ‡¶∏‡ßç‡¶ï‡ßç‡¶∞‡¶ø‡¶® ‡¶∂‡ßá‡¶Ø‡¶º‡¶æ‡¶∞',
        '‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ ‡¶≠‡¶Ø‡¶º‡ßá‡¶∏ ‡¶∞‡¶ø‡¶ï‡¶ó‡¶®‡¶ø‡¶∂‡¶®',
        '‡¶≤‡¶ø‡¶Æ‡¶ø‡¶ü‡ßá‡¶° AI ‡¶∏‡¶æ‡¶™‡ßã‡¶∞‡ßç‡¶ü',
        '‡ß´‡¶ü‡¶ø ‡¶ü‡ßã‡¶ï‡ßá‡¶®'
      ],
      buttonText: '‡¶¨‡¶∞‡ßç‡¶§‡¶Æ‡¶æ‡¶® ‡¶™‡ßç‡¶≤‡ßç‡¶Ø‡¶æ‡¶®',
      popular: false,
      disabled: userData?.subscription === 'free'
    },
    {
      id: 'pro',
      name: 'Pro',
      price: '‡ß≥‡ß™‡ßØ‡ßØ',
      period: '‡¶Æ‡¶æ‡¶∏‡¶ø‡¶ï',
      tokens: '‡ßß‡ß¶‡ß¶ ‡¶ü‡ßã‡¶ï‡ßá‡¶®/‡¶Æ‡¶æ‡¶∏',
      features: [
        '‡¶Ü‡¶®‡¶≤‡¶ø‡¶Æ‡¶ø‡¶ü‡ßá‡¶° ‡¶∏‡ßç‡¶ï‡ßç‡¶∞‡¶ø‡¶® ‡¶∂‡ßá‡¶Ø‡¶º‡¶æ‡¶∞',
        '‡¶Ö‡ßç‡¶Ø‡¶æ‡¶°‡¶≠‡¶æ‡¶®‡ßç‡¶∏‡¶° AI ‡¶∏‡¶æ‡¶™‡ßã‡¶∞‡ßç‡¶ü',
        '‡¶™‡ßç‡¶∞‡¶æ‡¶á‡¶ì‡¶∞‡¶ø‡¶ü‡¶ø ‡¶ï‡¶æ‡¶∏‡ßç‡¶ü‡¶Æ‡¶æ‡¶∞ ‡¶∏‡¶æ‡¶™‡ßã‡¶∞‡ßç‡¶ü',
        '‡ßß‡ß¶‡ß¶‡¶ü‡¶ø ‡¶ü‡ßã‡¶ï‡ßá‡¶® ‡¶™‡ßç‡¶∞‡¶§‡¶ø ‡¶Æ‡¶æ‡¶∏‡ßá',
        '‡¶´‡¶æ‡¶∏‡ßç‡¶ü ‡¶∞‡ßá‡¶∏‡¶™‡¶®‡ßç‡¶∏ ‡¶ü‡¶æ‡¶á‡¶Æ'
      ],
      buttonText: '‡¶Ü‡¶™‡¶ó‡ßç‡¶∞‡ßá‡¶° ‡¶ï‡¶∞‡ßÅ‡¶®',
      popular: true,
      disabled: userData?.subscription === 'pro'
    },
    {
      id: 'premium',
      name: 'Premium',
      price: '‡ß≥‡ßØ‡ßØ‡ßØ',
      period: '‡¶Æ‡¶æ‡¶∏‡¶ø‡¶ï',
      tokens: '‡¶Ü‡¶®‡¶≤‡¶ø‡¶Æ‡¶ø‡¶ü‡ßá‡¶°',
      features: [
        '‡¶Ü‡¶®‡¶≤‡¶ø‡¶Æ‡¶ø‡¶ü‡ßá‡¶° ‡¶∏‡¶¨ ‡¶ï‡¶ø‡¶õ‡ßÅ',
        'AI ‡¶è‡¶ï‡ßç‡¶∏‡¶™‡¶æ‡¶∞‡ßç‡¶ü ‡¶∏‡¶æ‡¶™‡ßã‡¶∞‡ßç‡¶ü',
        '‡ß®‡ß™/‡ß≠ ‡¶ï‡¶æ‡¶∏‡ßç‡¶ü‡¶Æ‡¶æ‡¶∞ ‡¶∏‡¶æ‡¶™‡ßã‡¶∞‡ßç‡¶ü',
        '‡¶Ü‡¶®‡¶≤‡¶ø‡¶Æ‡¶ø‡¶ü‡ßá‡¶° ‡¶ü‡ßã‡¶ï‡ßá‡¶®',
        '‡¶è‡¶ï‡ßç‡¶∏‡¶ï‡ßç‡¶≤‡ßÅ‡¶∏‡¶ø‡¶≠ ‡¶´‡¶ø‡¶ö‡¶æ‡¶∞ ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶ï‡ßç‡¶∏‡ßá‡¶∏',
        '‡¶ï‡¶æ‡¶∏‡ßç‡¶ü‡¶Æ AI ‡¶Æ‡¶°‡ßá‡¶≤'
      ],
      buttonText: '‡¶Ü‡¶™‡¶ó‡ßç‡¶∞‡ßá‡¶° ‡¶ï‡¶∞‡ßÅ‡¶®',
      popular: false,
      disabled: userData?.subscription === 'premium'
    }
  ];

  const handleSubscribe = async (planId: string) => {
    setLoading(planId);
    
    // Simulate payment processing
    setTimeout(() => {
      toast({
        title: "‡¶™‡ßá‡¶Æ‡ßá‡¶®‡ßç‡¶ü ‡¶∏‡¶ø‡¶∏‡ßç‡¶ü‡ßá‡¶Æ",
        description: "‡¶™‡ßá‡¶Æ‡ßá‡¶®‡ßç‡¶ü ‡¶ó‡ßá‡¶ü‡¶ì‡¶Ø‡¶º‡ßá ‡¶∂‡ßÄ‡¶ò‡ßç‡¶∞‡¶á ‡¶Ø‡ßÅ‡¶ï‡ßç‡¶§ ‡¶π‡¶¨‡ßá!",
      });
      setLoading(null);
    }, 2000);
  };

  const getCurrentPlanColor = (subscription: string) => {
    switch (subscription) {
      case 'pro': return 'bg-blue-500';
      case 'premium': return 'bg-purple-500';
      default: return 'bg-gray-500';
    }
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-black via-red-950 to-black">
      {/* Animated Background */}
      <div className="absolute inset-0 overflow-hidden">
        <div className="absolute -top-40 -right-40 w-96 h-96 bg-red-500/10 rounded-full blur-3xl animate-pulse"></div>
        <div className="absolute -bottom-40 -left-40 w-96 h-96 bg-red-600/10 rounded-full blur-3xl animate-pulse delay-1000"></div>
      </div>

      {/* Header */}
      <div className="relative z-10 flex justify-between items-center p-6">
        <div className="flex items-center gap-4">
          <Button
            onClick={() => navigate('/')}
            variant="outline"
            className="bg-black/40 border-red-500/30 text-white hover:bg-red-900/20"
          >
            <ArrowLeft className="w-4 h-4 mr-2" />
            ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ï
          </Button>
          <div>
            <h1 className="text-3xl font-bold text-white">
              <span className="text-red-500">Killer</span> Assistant
            </h1>
            <p className="text-gray-300 mt-1">‡¶∏‡¶æ‡¶¨‡¶∏‡ßç‡¶ï‡ßç‡¶∞‡¶ø‡¶™‡¶∂‡¶® ‡¶™‡ßç‡¶≤‡ßç‡¶Ø‡¶æ‡¶®</p>
          </div>
        </div>

        <div className="flex items-center gap-4">
          <Card className="bg-black/40 border-red-500/30">
            <CardContent className="p-4">
              <div className="flex items-center gap-2">
                <Badge className={`${getCurrentPlanColor(userData?.subscription || 'free')} text-white`}>
                  {userData?.subscription?.toUpperCase()}
                </Badge>
                <span className="text-white text-sm">
                  üî¢ {userData?.subscription === 'premium' ? '‚àû' : `${(userData?.tokens || 0) - (userData?.usedTokens || 0)}`} ‡¶ü‡ßã‡¶ï‡ßá‡¶®
                </span>
              </div>
            </CardContent>
          </Card>

          <Button 
            onClick={logout} 
            variant="outline" 
            className="bg-black/40 border-red-500/30 text-white hover:bg-red-900/20"
          >
            ‡¶≤‡¶ó‡¶Ü‡¶â‡¶ü
          </Button>
        </div>
      </div>

      {/* Main Content */}
      <div className="relative z-10 max-w-7xl mx-auto px-6 py-12">
        <div className="text-center mb-12">
          <h2 className="text-4xl md:text-6xl font-bold text-white mb-4">
            Choose Your <span className="text-red-500">Plan</span>
          </h2>
          <p className="text-xl text-gray-300 max-w-2xl mx-auto">
            ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶™‡ßç‡¶∞‡¶Ø‡¶º‡ßã‡¶ú‡¶® ‡¶Ö‡¶®‡ßÅ‡¶Ø‡¶æ‡¶Ø‡¶º‡ßÄ ‡¶™‡ßç‡¶≤‡ßç‡¶Ø‡¶æ‡¶® ‡¶¨‡ßá‡¶õ‡ßá ‡¶®‡¶ø‡¶® ‡¶è‡¶¨‡¶Ç AI ‡¶è‡¶∞ ‡¶∏‡¶Æ‡ßç‡¶™‡ßÇ‡¶∞‡ßç‡¶£ ‡¶∂‡¶ï‡ßç‡¶§‡¶ø ‡¶â‡¶™‡¶≠‡ßã‡¶ó ‡¶ï‡¶∞‡ßÅ‡¶®
          </p>
        </div>

        <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
          {plans.map((plan) => (
            <Card
              key={plan.id}
              className={`relative bg-black/40 border-red-500/30 backdrop-blur-xl ${
                plan.popular ? 'ring-2 ring-blue-500 scale-105' : ''
              }`}
            >
              {plan.popular && (
                <div className="absolute -top-4 left-1/2 transform -translate-x-1/2">
                  <Badge className="bg-blue-500 text-white px-4 py-1 flex items-center gap-1">
                    <Star className="w-4 h-4" />
                    ‡¶ú‡¶®‡¶™‡ßç‡¶∞‡¶ø‡¶Ø‡¶º
                  </Badge>
                </div>
              )}

              <CardHeader className="text-center pb-8">
                <CardTitle className="text-2xl font-bold text-white mb-2">
                  {plan.name}
                </CardTitle>
                <div className="mb-4">
                  <span className="text-4xl font-bold text-white">{plan.price}</span>
                  <span className="text-gray-300 ml-2">/{plan.period}</span>
                </div>
                <CardDescription className="text-lg text-blue-400 font-semibold">
                  {plan.tokens}
                </CardDescription>
              </CardHeader>

              <CardContent className="space-y-6">
                <ul className="space-y-3">
                  {plan.features.map((feature, index) => (
                    <li key={index} className="flex items-center gap-3 text-gray-300">
                      <Check className="w-5 h-5 text-green-500 flex-shrink-0" />
                      <span>{feature}</span>
                    </li>
                  ))}
                </ul>

                <Button
                  onClick={() => handleSubscribe(plan.id)}
                  disabled={plan.disabled || loading === plan.id}
                  className={`w-full py-6 text-lg ${
                    plan.popular
                      ? 'bg-blue-600 hover:bg-blue-700'
                      : plan.id === 'premium'
                      ? 'bg-purple-600 hover:bg-purple-700'
                      : 'bg-gray-600 hover:bg-gray-700'
                  } ${plan.disabled ? 'opacity-50 cursor-not-allowed' : ''}`}
                >
                  {loading === plan.id ? '‡¶™‡ßç‡¶∞‡¶∏‡ßá‡¶∏‡¶ø‡¶Ç...' : plan.buttonText}
                </Button>
              </CardContent>
            </Card>
          ))}
        </div>

        <div className="mt-16 text-center">
          <Card className="max-w-2xl mx-auto bg-black/40 border-red-500/30 backdrop-blur-xl">
            <CardHeader>
              <CardTitle className="text-white">üí° ‡¶ü‡ßã‡¶ï‡ßá‡¶® ‡¶∏‡¶ø‡¶∏‡ßç‡¶ü‡ßá‡¶Æ</CardTitle>
            </CardHeader>
            <CardContent>
              <div className="grid grid-cols-1 md:grid-cols-2 gap-6 text-gray-300">
                <div>
                  <h4 className="font-semibold text-white mb-2">‡¶ü‡ßã‡¶ï‡ßá‡¶® ‡¶ï‡¶ø‡¶≠‡¶æ‡¶¨‡ßá ‡¶ï‡¶æ‡¶ú ‡¶ï‡¶∞‡ßá?</h4>
                  <ul className="text-sm space-y-1">
                    <li>‚Ä¢ ‡¶™‡ßç‡¶∞‡¶§‡¶ø ‡¶∏‡ßç‡¶ï‡ßç‡¶∞‡¶ø‡¶® ‡¶∂‡ßá‡¶Ø‡¶º‡¶æ‡¶∞ = ‡ßß ‡¶ü‡ßã‡¶ï‡ßá‡¶®</li>
                    <li>‚Ä¢ ‡¶™‡ßç‡¶∞‡¶•‡¶Æ ‡¶≤‡¶ó‡¶á‡¶®‡ßá ‡ßß‡ß¶ ‡¶¨‡ßã‡¶®‡¶æ‡¶∏ ‡¶ü‡ßã‡¶ï‡ßá‡¶®</li>
                    <li>‚Ä¢ ‡¶™‡ßç‡¶∞‡¶ø‡¶Æ‡¶ø‡¶Ø‡¶º‡¶æ‡¶Æ ‡¶™‡ßç‡¶≤‡ßç‡¶Ø‡¶æ‡¶®‡ßá ‡¶Ü‡¶®‡¶≤‡¶ø‡¶Æ‡¶ø‡¶ü‡ßá‡¶°</li>
                  </ul>
                </div>
                <div>
                  <h4 className="font-semibold text-white mb-2">‡¶¨‡¶ø‡¶∂‡ßá‡¶∑ ‡¶∏‡ßÅ‡¶¨‡¶ø‡¶ß‡¶æ</h4>
                  <ul className="text-sm space-y-1">
                    <li>‚Ä¢ ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ ‡¶≠‡¶Ø‡¶º‡ßá‡¶∏ ‡¶∞‡¶ø‡¶ï‡¶ó‡¶®‡¶ø‡¶∂‡¶®</li>
                    <li>‚Ä¢ ‡¶∞‡¶ø‡¶Ø‡¶º‡ßá‡¶≤-‡¶ü‡¶æ‡¶á‡¶Æ AI ‡¶∏‡¶æ‡¶™‡ßã‡¶∞‡ßç‡¶ü</li>
                    <li>‚Ä¢ ‡¶∏‡¶ø‡¶ï‡¶ø‡¶â‡¶∞ ‡¶∏‡ßç‡¶ï‡ßç‡¶∞‡¶ø‡¶® ‡¶∂‡ßá‡¶Ø‡¶º‡¶æ‡¶∞‡¶ø‡¶Ç</li>
                  </ul>
                </div>
              </div>
            </CardContent>
          </Card>
        </div>
      </div>
    </div>
  );
};

export default Subscription;